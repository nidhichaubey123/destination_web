@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewBag.PageTitle = "Meeting Type Master";
}
@model List<DMCPortal.Web.Models.MeetingType>

<style>
    body {
        background-color: #f8f9fa;
    }

    .content-area {
        flex: 1;
        padding: 20px;
        overflow-y: auto;
    }

    .loading {
        text-align: center;
        padding: 20px;
    }

    .head {
        text-align: center !important; /* Corrected typo: text-algn to text-align */
        font-size: 30px;
    }
</style>
<!-- Add this before your page scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<a href="@Url.Action("Index", "Master")" class="btn btn-primary" style="border-radius: 8px; padding: 8px 16px;">
    <i class="fas fa-arrow-left" style="margin-right: 6px;"></i> Back
</a>

<br />
<br />
<div class="head"><b>Meeting Type Master</b></div>

<div class="d-flex">
    <div class="content-area w-100">
        <div id="alertPlaceholder"></div>
        <div class="card p-4 mb-4">
            <form id="meetingTypeForm">
                <input type="hidden" id="MeetingTypeId" value="0" />
                <div class="mb-3">
                    <label class="form-label">Name <span class="text-danger">*</span></label>
                    <input type="text" id="MeetingTypeName" class="form-control" maxlength="255" required />
                </div>
                <div class="mb-3">
                    <label class="form-label">Description</label>
                    <textarea id="MeetingTypeDesc" class="form-control" rows="3" maxlength="500"></textarea>
                </div>
                <div class="form-check mb-3">
                    <input type="checkbox" id="MeetingIsActive" class="form-check-input" checked />
                    <label class="form-check-label">Is Active?</label>
                </div>
                <button type="submit" class="btn btn-success">Save</button>
                <button type="button" class="btn btn-secondary" id="cancelBtn">Cancel</button>
            </form>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="loading d-none" id="loadingIndicator">Loading...</div>
                <table class="table table-bordered text-center" id="meetingTable">
                    <thead class="table-dark">
                        <tr><th>ID</th><th>Name</th><th>Description</th><th>Active</th><th>Created</th><th>Actions</th></tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteMeetingModal" tabindex="-1" aria-labelledby="deleteMeetingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteMeetingModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <b><span id="deleteMeetingName"></span></b>?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmMeetingDeleteBtn">
                    <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>


    <script>
        // Wrap your jQuery-dependent code in $(document).ready()
        $(document).ready(function () {
            loadTable();

            $('#meetingTypeForm').submit(function (e) {
                e.preventDefault();
                const model = {
                    MeetingTypeId: +$('#MeetingTypeId').val() || 0,
                    MeetingTypeName: $('#MeetingTypeName').val().trim(),
                    MeetingTypeDesc: $('#MeetingTypeDesc').val().trim(),
                    IsActive: $('#MeetingIsActive').is(':checked')
                };
                if (!model.MeetingTypeName) return showAlert('Name is required', 'danger');

                $.ajax({
                    url: '/MeetingType/AddOrUpdate', method: 'POST', contentType: 'application/json', data: JSON.stringify(model),
                    success: res => {
                        if (res.success) { showAlert(res.message, 'success'); resetForm(); loadTable(); }
                        else showAlert(res.error, 'danger');
                    },
                    error: function (xhr) {
                        showAlert('An error occurred during save/update: ' + xhr.responseText, 'danger');
                    }
                });
            });

            $('#cancelBtn').click(() => resetForm());

            // Delete functionality
            let meetingDeleteId = 0;

            $(document).on('click', '.deleteMeetingBtn', function () {
                meetingDeleteId = $(this).data('id');
                const name = $(this).data('name');
                $('#deleteMeetingName').text(name);
                var deleteModal = new bootstrap.Modal(document.getElementById('deleteMeetingModal'));
                deleteModal.show();
            });

            $('#confirmMeetingDeleteBtn').click(function () {
                const btn = $(this);
                const spinner = btn.find('.spinner-border');

                btn.prop('disabled', true);
                spinner.removeClass('d-none');

                $.ajax({
                    url: `/MeetingType/Delete?id=${meetingDeleteId}`,
                    method: 'DELETE',
                    success: function (res) {
                        if (res.success) {
                            showAlert(res.message || 'Deleted successfully', 'success');
                            loadTable();  // Reload your MeetingType table
                        } else {
                            showAlert(res.error || res.message || 'Delete failed', 'danger');
                        }
                        var deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteMeetingModal'));
                        deleteModal.hide();
                    },
                    error: function (xhr) {
                        let msg = 'Error occurred';
                        try {
                            const res = JSON.parse(xhr.responseText);
                            msg = res.error || res.message || msg;
                        } catch { }
                        showAlert(msg, 'danger');
                    },
                    complete: function () {
                        btn.prop('disabled', false);
                        spinner.addClass('d-none');
                    }
                });
            });

        }); // End of $(document).ready()

        // These functions can be outside $(document).ready() if they are only called by other functions
        // that are inside $(document).ready() or by HTML event attributes like 'onclick'.
        // However, it's generally good practice to keep them within if they directly interact with the DOM
        // using jQuery selectors that might not exist yet. In this case, `loadTable` is called on ready,
        // so it's fine. `edit` is called by `onclick`, so it's fine too.

        function loadTable() {
            $('#loadingIndicator').removeClass('d-none');
            $.get('/MeetingType/GetAll', res => {
                const rows = res.map(d => `
                            <tr>
                                <td>${d.meetingTypeId}</td>
                                <td>${d.meetingTypeName}</td>
                                <td>${d.meetingTypeDesc || ''}</td>
                                <td>${d.isActive ? 'Yes' : 'No'}</td>
                                <td>${d.createdOn ? new Date(d.createdOn).toLocaleDateString() : ''}</td>
                                <td>
                                    <button class="btn btn-sm btn-primary" onclick="edit(${d.meetingTypeId})">Edit</button>
                                    <button class="btn btn-sm btn-danger deleteMeetingBtn" data-id="${d.meetingTypeId}" data-name="${d.meetingTypeName}">Delete</button>
                                </td>
                            </tr>
                        `).join('');
                $('#meetingTable tbody').html(rows);
                $('#loadingIndicator').addClass('d-none');
            }).fail(function (xhr, status, error) {
                showAlert('Failed to load table data: ' + error, 'danger');
                $('#loadingIndicator').addClass('d-none');
            });
        }

        function edit(id) {
            $.get(`/MeetingType/GetById?id=${id}`, d => {
                $('#MeetingTypeId').val(d.meetingTypeId);
                $('#MeetingTypeName').val(d.meetingTypeName);
                $('#MeetingTypeDesc').val(d.meetingTypeDesc);
                $('#MeetingIsActive').prop('checked', d.isActive);
            }).fail(function (xhr, status, error) {
                showAlert('Failed to load data for edit: ' + error, 'danger');
            });
        }

        function resetForm() {
            $('#MeetingTypeId').val(0);
            $('#meetingTypeForm')[0].reset();
            $('#MeetingIsActive').prop('checked', true);
            $('#alertPlaceholder').empty(); // Clear any existing alerts on reset
        }

        function showAlert(msg, type) {
            $('#alertPlaceholder').html(`<div class="alert alert-${type}">${msg}</div>`);
            if (type === 'success') {
                setTimeout(() => {
                    // Check if the alert still exists before fading out to prevent errors if it's already removed
                    const alertElement = $('#alertPlaceholder .alert');
                    if (alertElement.length) {
                        alertElement.fadeOut(function () {
                            $(this).remove();
                        });
                    }
                }, 3000);
            }
        }
    </script>
